name: Scrybe AI - Manual Backtest Run

on:
  workflow_dispatch:
    inputs:
      batch_id:
        description: 'Unique ID for the backtest batch (e.g., AI_Smallcap_Apr25)' # Updated example ID
        required: true
        default: 'MANUAL-RUN'
      start_date:
        description: 'Start date (YYYY-MM-DD)'
        required: true
        default: '2025-04-01'
      end_date:
        description: 'End date (YYYY-MM-DD)'
        required: true
        default: '2025-04-30'
      fresh_run:
        description: 'Delete previous data for this batch_id? (true/false)'
        required: true
        default: 'true'
      tickers:
        description: 'Optional: Tickers to test (e.g., RELIANCE.NS HDFCBANK.NS). Leave blank for Nifty Smallcap 250.' # Updated description
        required: false
        default: ''
      # --- ADDED BATCH INPUTS ---
      total_batches:
        description: 'Total number of batches to split universe into (e.g., 2 or 3)'
        required: true
        default: '2' # Default to splitting into 2 batches
      batch_num:
        description: 'Which batch number to run (1 to total_batches)'
        required: true
        default: '1' # Default to running the first batch
      # --- END ADDED BATCH INPUTS ---

jobs:
  run-unified-backtest:
    runs-on: ubuntu-latest
    timeout-minutes: 360 # 6 hours - Still might be tight for one batch, monitor runtime
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install TA-Lib C Library Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential wget

      - name: Download and Install TA-Lib C Library
        run: |
          wget http://prdownloads.sourceforge.net/ta-lib/ta-lib-0.4.0-src.tar.gz && \
          tar -xzf ta-lib-0.4.0-src.tar.gz && \
          cd ta-lib/ && \
          ./configure --prefix=/usr && \
          make && \
          sudo make install
          cd ..

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt

      - name: Run Unified Backtesting Engine
        env:
          # Angel One Credentials
          ANGELONE_API_KEY: ${{ secrets.ANGELONE_API_KEY }}
          ANGELONE_CLIENT_ID: ${{ secrets.ANGELONE_CLIENT_ID }}
          ANGELONE_PASSWORD: ${{ secrets.ANGELONE_PASSWORD }}
          ANGELONE_TOTP_SECRET: ${{ secrets.ANGELONE_TOTP_SECRET }}

          # Database & Other API Keys
          ANALYSIS_DB_URI: ${{ secrets.ANALYSIS_DB_URI }}
          SCHEDULER_DB_URI: ${{ secrets.SCHEDULER_DB_URI }}
          NEWSAPI_API_KEY: ${{ secrets.NEWSAPI_API_KEY }}

          # Azure AI Credentials & Deployments
          AZURE_AI_ENDPOINT: ${{ secrets.AZURE_AI_ENDPOINT }}
          AZURE_AI_API_KEY: ${{ secrets.AZURE_AI_API_KEY }}
          # New provider-agnostic model envs
          AZURE_PRIMARY_DEPLOYMENT: ${{ secrets.AZURE_PRIMARY_DEPLOYMENT }}
          AZURE_SECONDARY_DEPLOYMENT: ${{ secrets.AZURE_SECONDARY_DEPLOYMENT }}
          # Backward compatibility (will be ignored if new vars above are set)
          AZURE_PRO_DEPLOYMENT: ${{ secrets.AZURE_PRO_DEPLOYMENT }}
          AZURE_FLASH_DEPLOYMENT: ${{ secrets.AZURE_FLASH_DEPLOYMENT }}

        run: |
          echo "Running backtest with Batch ID: ${{ github.event.inputs.batch_id }}, Period: ${{ github.event.inputs.start_date }} to ${{ github.event.inputs.end_date }}, Batch: ${{ github.event.inputs.batch_num }} of ${{ github.event.inputs.total_batches }}"
          python main_orchestrator.py \
            --batch_id ${{ github.event.inputs.batch_id }} \
            --start_date ${{ github.event.inputs.start_date }} \
            --end_date ${{ github.event.inputs.end_date }} \
            --fresh_run ${{ github.event.inputs.fresh_run }} \
            --total_batches ${{ github.event.inputs.total_batches }} \
            --batch_num ${{ github.event.inputs.batch_num }} \
            ${{ github.event.inputs.tickers && '--tickers' }} ${{ github.event.inputs.tickers }} # Keep optional ticker override