name: Scrybe AI - Daily Analysis and Report

on:
  schedule:
    - cron: '30 14 * * 1-5' # Runs at 14:30 UTC (8:00 PM IST) on weekdays
  workflow_dispatch: # Allows manual triggering

jobs:
  run_daily_pipeline:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      # FIX 1: Add this step to install all required libraries
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Step 1: Check if the market was open on the previous trading day
      - name: Check Market Status
        id: market_status
        run: python check_market_open.py

      # Step 2: Run the Main Orchestrator (only if the market was open)
      - name: Run Main Orchestrator
        if: success() # This condition is fine, it proceeds if the market check passed
        env:
          # IMPORTANT: Make sure all your secrets are correctly mapped here
          ANALYSIS_DB_URI: ${{ secrets.ANALYSIS_DB_URI }}
          SCHEDULER_DB_URI: ${{ secrets.SCHEDULER_DB_URI }}
          GOOGLE_API_KEY_1: ${{ secrets.GOOGLE_API_KEY_1 }}
          GOOGLE_API_KEY_2: ${{ secrets.GOOGLE_API_KEY_2 }}
          # ... add all other GOOGLE_API_KEY secrets
          NEWSAPI_API_KEY: ${{ secrets.NEWSAPI_API_KEY }}
        run: python main_orchestrator.py --mode live

      # FIX 2: The problematic 'git clone' step has been removed.
      # The pandas-ta library is correctly installed from the requirements.txt file.

      # Step 3: Send the daily report email (only if the orchestrator was successful)
      - name: Send Daily Report
        if: success()
        env:
          ANALYSIS_DB_URI: ${{ secrets.ANALYSIS_DB_URI }}
          GMAIL_ADDRESS: ${{ secrets.GMAIL_ADDRESS }}
          GMAIL_APP_PASSWORD: ${{ secrets.GMAIL_APP_PASSWORD }}
          NEWSAPI_API_KEY: ${{ secrets.NEWSAPI_API_KEY }}
        run: python send_daily_report.py