name: Manual Backtest Runner

on:
  # This trigger creates the manual "Run workflow" button on GitHub
  workflow_dispatch:
    inputs:
      batch_id:
        description: 'Unique ID for this backtest (e.g., vst_backtest_2025_07)'
        required: true
      start_date:
        description: 'Start date (YYYY-MM-DD)'
        required: true
        default: '2025-07-01'
      end_date:
        description: 'End date (YYYY-MM-DD)'
        required: true
        default: '2025-07-31'
      stocks:
        description: 'Comma-separated list of stocks (e.g., RELIANCE.NS,INFY.NS)'
        required: true
        default: 'RELIANCE.NS,INFY.NS,HDFCBANK.NS,TCS.NS,ICICIBANK.NS'
      fresh_run:
        description: 'Delete all previous backtest data before starting?'
        type: boolean
        required: true
        default: false
      generate_charts:
        description: 'Generate charts for AI analysis (slower, more expensive)?'
        type: boolean
        required: true
        default: false

jobs:
  run-backtest:
    runs-on: ubuntu-latest
    # Set a long timeout for potentially weekend-long runs (e.g., 36 hours)
    timeout-minutes: 2160 

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run the historical analysis script
        env:
          # Pass all necessary secrets to the script
          ANALYSIS_DB_URI: ${{ secrets.ANALYSIS_DB_URI }}
          SCHEDULER_DB_URI: ${{ secrets.SCHEDULER_DB_URI }}
          GOOGLE_API_KEY_1: ${{ secrets.GOOGLE_API_KEY_1 }}
          GOOGLE_API_KEY_2: ${{ secrets.GOOGLE_API_KEY_2 }}
          GOOGLE_API_KEY_3: ${{ secrets.GOOGLE_API_KEY_3 }}
          GOOGLE_API_KEY_4: ${{ secrets.GOOGLE_API_KEY_4 }}
          GOOGLE_API_KEY_5: ${{ secrets.GOOGLE_API_KEY_5 }}
        run: |
          python historical_runner.py \
            --batch_id "${{ github.event.inputs.batch_id }}" \
            --start_date "${{ github.event.inputs.start_date }}" \
            --end_date "${{ github.event.inputs.end_date }}" \
            --stocks "${{ github.event.inputs.stocks }}" \
            --fresh_run "${{ github.event.inputs.fresh_run }}" \
            --generate_charts "${{ github.event.inputs.generate_charts }}"